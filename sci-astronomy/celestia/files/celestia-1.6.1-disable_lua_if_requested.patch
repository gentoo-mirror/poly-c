--- celestia-1.6.1/src/celengine/cmdparser.cpp
+++ celestia-1.6.1/src/celengine/cmdparser.cpp
@@ -27,8 +27,10 @@
 #include <celutil/debug.h>
 #include <celmath/mathlib.h>
 #include <celengine/astro.h>
+#ifdef CELX
 #include <celestia/celx.h>
 #include <celestia/celx_internal.h>
+#endif
 #include "astro.h"
 #include "cmdparser.h"
 #include "glcontext.h"
@@ -797,10 +799,12 @@
         {
             string name = tokenizer.getNameValue();
 
+#ifdef CELX
             if (CelxLua::RenderFlagMap.count(name) == 0)
                 cerr << "Unknown render flag: " << name << "\n";
             else
                 flags |= CelxLua::RenderFlagMap[name];
+#endif
 
             ttype = tokenizer.nextToken();
             if (ttype == Tokenizer::TokenBar)
@@ -826,10 +830,12 @@
         {
             string name = tokenizer.getNameValue();
 
+#ifdef CELX
             if (CelxLua::LabelFlagMap.count(name) == 0)
                 cerr << "Unknown label flag: " << name << "\n";
             else
                 flags |= CelxLua::LabelFlagMap[name];
+#endif
 
             ttype = tokenizer.nextToken();
             if (ttype == Tokenizer::TokenBar)
@@ -856,10 +862,12 @@
             string name = tokenizer.getNameValue();
             name[0] = toupper(name[0]);
 
+#ifdef CELX
             if (CelxLua::BodyTypeMap.count(name) == 0)
                 cerr << "Unknown orbit flag: " << name << "\n";
             else
                 flags |= CelxLua::BodyTypeMap[name];
+#endif
 
             ttype = tokenizer.nextToken();
             if (ttype == Tokenizer::TokenBar)
--- celestia-1.6.1/src/celengine/command.cpp
+++ celestia-1.6.1/src/celengine/command.cpp
@@ -11,7 +11,22 @@
 #include <celutil/util.h>
 #include <celestia/celestiacore.h>
 #include <celestia/imagecapture.h>
-#include <celestia/celx_internal.h>
+#ifdef CELX
+    #include <celestia/celx_internal.h>
+#else
+    #include <map>
+    #include <string>
+    #include <celutil/timer.h>
+    #include <celengine/observer.h>
+
+    class CelestiaCore;
+    class View;
+
+    CelestiaCore* appCore(FatalErrors fatalErrors = NoErrors);
+
+    View* getViewByObserver(CelestiaCore*, Observer*);
+    void getObservers(CelestiaCore*, std::vector<Observer*>&);
+#endif
 #include "astro.h"
 #include "command.h"
 #include "execution.h"
@@ -19,7 +34,6 @@
 
 using namespace std;
 
-
 ////////////////
 // Wait command: a no-op with no side effect other than its duration
 
@@ -888,6 +902,7 @@
 {
 }
 
+#ifdef CELX
 void CommandSetLineColor::process(ExecutionEnvironment& /* env */)
 {
     if (CelxLua::LineColorMap.count(item) == 0)
@@ -899,6 +914,7 @@
         *CelxLua::LineColorMap[item] = color;
     }
 }
+#endif
 
 
 ////////////////
@@ -910,6 +926,7 @@
 {
 }
 
+#ifdef CELX
 void CommandSetLabelColor::process(ExecutionEnvironment& /* env */)
 {
     if (CelxLua::LabelColorMap.count(item) == 0)
@@ -921,6 +938,7 @@
         *CelxLua::LabelColorMap[item] = color;
     }
 }
+#endif
 
 
 ////////////////
